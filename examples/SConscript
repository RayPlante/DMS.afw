# -*- python -*-
import sys
Import('env')

env.Program(["generate.cc"], LIBS=env.getlibs("fw"))
env.Program(["vwconvert.cc"], LIBS=env.getlibs("vw"))
env.Program(["fitsio.cc"], LIBS=env.getlibs("fw fitsio"))
env.Program("maskedImageFitsIO", ["maskedImageFitsIO.cc"], LIBS=env.getlibs("fw fitsio"))

env.Program("chebyshev1Function", ["chebyshev1Function.cc"], LIBS=env.getlibs("fw"))
env.Program("gaussianFunction", ["gaussianFunction.cc"], LIBS=env.getlibs("fw"))
env.Program("integerDeltaFunction", ["integerDeltaFunction.cc"], LIBS=env.getlibs("fw"))
env.Program("lanczosFunction", ["lanczosFunction.cc"], LIBS=env.getlibs("fw"))
env.Program("polynomialFunction", ["polynomialFunction.cc"], LIBS=env.getlibs("fw"))

env.Program("analyticKernel", ["analyticKernel.cc"], LIBS=env.getlibs("fw"))
env.Program("deltaFunctionKernels", ["deltaFunctionKernels.cc"], LIBS=env.getlibs("fw"))
env.Program("fixedKernel", ["fixedKernel.cc"], LIBS=env.getlibs("fw"))
env.Program("lanczosKernel", ["lanczosKernel.cc"], LIBS=env.getlibs("fw"))

env.Program("simpleConvolve", ["simpleConvolve.cc"], LIBS=env.getlibs("fw fitsio"))
env.Program("spatiallyVaryingConvolve", ["spatiallyVaryingConvolve.cc"], LIBS=env.getlibs("fw fitsio"))
env.Program("timeConvolve", ["timeConvolve.cc"], LIBS=env.getlibs("fw fitsio"))
env.Program("timeSpatiallyVaryingConvolve", ["timeSpatiallyVaryingConvolve.cc"], LIBS=env.getlibs("fw fitsio"))
#
# Tests
#
import lsst.tests
tests = lsst.tests.Control(env, ignoreList=[
    "fitsio", "generate", "vwconvert", "maskedImageFitsIO",
    "simpleConvolve", "spatiallyVaryingConvolve", "timeConvolve", "timeSpatiallyVaryingConvolve",
])

if not tests.runExamples:
    if not env.QuietFlagIsSet():
        print >> sys.stderr, "Not running the examples; \"chmod o+x examples/%s\" to run them" % tests._tmpDir
else:
    if not env.QuietFlagIsSet():
        print >> sys.stderr, "Running the examples; \"chmod o-x examples/%s\" to not run them" % tests._tmpDir
    tests.run("*.cc")
    tests.run("*.py")
