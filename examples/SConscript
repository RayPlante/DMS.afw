# -*- python -*-
Import('env')

env.Program("citizen", ["citizenExample.cc"], LIBS="fw")
env.Program(["generate.cc"],
	    LIBS=["fw"] + env.libs["vw"] + \
            Split("vwMosaic vwImage") + env.libs["boost"])
env.Program(["vwconvert.cc"], LIBS=env.libs["vw"])
env.Program(["fitsio.cc"], LIBS=env.libs["vw"] + env.libs["fits"])
env.Program(["exceptions.cc"], LIBS="fw")
env.Program("trace", ["traceExample.cc"], LIBS="fw")

#
# Tests
#
import glob, os
env.AppendENVPath('PYTHONPATH', os.environ['PYTHONPATH'])
env['ENV']['LD_LIBRARY_PATH'] = os.environ['LD_LIBRARY_PATH']
testTmpDir = ".tests/"                  # note trailing /

for f in glob.glob("*.py"):
    target = os.path.join(testTmpDir, f)
    env.Command(target, f, "@echo -n running $SOURCES; python $SOURCES > $TARGET 2>&1 || (mv $TARGET ${TARGET}.failed; echo -n ' failed'); echo")
    env.Depends(target, fwTests)
    
for f in glob.glob("*.cc"):
    exe = os.path.splitext(f)[0]
    try:
        if os.stat(exe).st_mode & 01:  # file exists and is executable
            target = os.path.join(testTmpDir, exe)
            env.Command(target, exe, "@echo -n running $SOURCES; $SOURCES > $TARGET 2>&1 || (mv $TARGET ${TARGET}.failed; echo -n ' failed'); echo")
    except OSError:
        pass

Clean("", testTmpDir)
