# -*- python -*-
Import("env")

env.Program(["Mask_1.cc"], LIBS=env.libs["vw"] + ["fw"])
env.Program(["MaskedImage_1.cc"], LIBS=env.libs["vw"] + ["fw"] + ["cfitsio"] + ["fitsio"])
env.Program(["BuildExcept.cc"], LIBS="fw")
env.Program(["DataProperty_1.cc"], LIBS="fw")
env.Program(["DataProperty_2.cc"], LIBS="fw")
env.Program(["MaskIO_1.cc"], LIBS=env.libs["vw"] + ["fw"] + ["cfitsio"] + ["fitsio"])
env.Program(["MaskedImageIO_1.cc"], LIBS=env.libs["vw"] + ["fw"] + ["cfitsio"] + ["fitsio"])
env.Program(["lsstdata01.cc"], LIBS=env.libs["vw"] + ["fw"])

env.CheckSwig("python", ilang="c++")
env.Append(SWIGFLAGS=" -Ipython")
fwTests = env.LoadableModuleIncomplete("_fwTests", "fwTests.i",
                                       LIBS=env.libs["vw"] + ["fw"])
#
# Tests
#
import lsst.tests
tests = lsst.tests.Control(env,
                           args=dict([
    ("MaskIO_1", "data/871034p_1_MI_msk.fits"),
    ("MaskedImage_1", "data/871034p_1_MI foo"),
    ("MaskedImageIO_1", "data/871034p_1_MI"),
    ]))

tests.run("*.cc")
for target in tests.run("*.py"):
    env.Depends(target, fwTests)
    env.Depends(target, "../python/lsst/fw/Core/_fwLib%s" % (env['LDMODULESUFFIX']))
