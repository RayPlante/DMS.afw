"boost", "boost/version.hpp", "boost_system:C++"
"boost", "boost/version.hpp", "boost_filesystem:C++"
"boost", "boost/regex.hpp", "boost_regex:C++"
"boost", "boost/filesystem.hpp", "boost_system:C++"
"boost", "boost/serialization/base_object.hpp", "boost_serialization:C++"
"boost", "boost/tr1/cmath.hpp", "boost_math_c99:C++"
"boost", "boost/tr1/cmath.hpp", "boost_math_c99f:C++"
"boost", "boost/test/unit_test.hpp", "boost_unit_test_framework:C++"
"python", "Python.h"
#"numpy", "Python.h numpy/arrayobject.h" # see numpy workaround below
"m", "math.h", "m", "sqrt"
"cfitsio", "fitsio.h", "cfitsio", "ffopen"
"wcslib", "wcslib/wcs.h", "wcs"
"xpa", "xpa.h", "xpa", "XPAPuts"
"minuit2", "Minuit2/FCNBase.h", "Minuit2:C++"
"gsl", "gsl/gsl_rng.h", "gslcblas gsl"
"pex_exceptions", "lsst/pex/exceptions.h", "pex_exceptions:C++"
"utils", "lsst/utils/Utils.h", "utils:C++"
"daf_base", "lsst/daf/base.h", "daf_base:C++"
"pex_logging", "lsst/pex/logging/Trace.h", "pex_logging:C++"
"security", "lsst/security/Security.h", "security:C++"
"pex_policy", "lsst/pex/policy/Policy.h", "pex_policy:C++"
"daf_persistence", "lsst/daf/persistence.h", "daf_persistence:C++"
"daf_data", "lsst/daf/data.h", "daf_data:C++"
"eigen", "Eigen/Core.h"
"fftw", "fftw3.h", "fftw3"
